{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","window","setInterval","setState","console","info","toUTCString","slice","prevProps","newName","props","clockName","oldName","debug","clearInterval","className","Component","getRandomName","value","now","toString","App","hasClock","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"qMAWaA,EAAb,4MACEC,MAAyB,CACvBC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,KAAM,IAAIC,OAC1BM,QAAQC,KAAK,EAAKT,MAAMC,KAAKS,cAAcC,OAAO,IAAK,MACtD,OAXP,gCAcE,SAAmBC,GACjB,IAAMC,EAAUT,KAAKU,MAAMC,UACrBC,EAAUJ,EAAUG,UAEtBF,IAAYG,GACdR,QAAQS,MAAR,uBAA8BD,EAA9B,eAA4CH,MAnBlD,kCAuBE,WACER,OAAOa,cAAcd,KAAKD,WAxB9B,oBA2BE,WACE,OACE,sBAAKgB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGf,KAAKU,MAAMC,YAGb,YAED,sBAAMI,UAAU,cAAhB,SACGf,KAAKJ,MAAMC,KAAKS,cAAcC,OAAO,IAAK,YArCrD,GAA2BS,a,MCP3B,SAASC,IACP,IAAMC,EAAQpB,KAAKqB,MAAMC,WAAWb,OAAO,GAE3C,MAAM,SAAN,OAAgBW,GAQX,IAAMG,EAAb,4MACEzB,MAAyB,CACvB0B,UAAU,EACVX,UAAW,WAHf,EAMEZ,QAAU,EANZ,uDAQE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEQ,UAAWM,QAC1B,MAEHM,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKvB,SAAS,CAAEmB,UAAU,OAG5BC,SAASC,iBAAiB,SAAS,WACjC,EAAKrB,SAAS,CAAEmB,UAAU,SAnBhC,kCAuBE,WACErB,OAAOa,cAAcd,KAAKD,WAxB9B,oBA2BE,WACE,MAAgCC,KAAKJ,MAA7B0B,EAAR,EAAQA,SAAUX,EAAlB,EAAkBA,UAElB,OACE,sBAAKI,UAAU,MAAf,UACE,6CACCO,GAAY,cAAC,EAAD,CAAOX,UAAWA,WAjCvC,GAAyBK,aCZzBW,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.7dd3befa.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport { Component } from 'react';\n\ntype Props = {\n  clockName: string,\n};\n\ntype State = {\n  date: Date,\n};\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ date: new Date() });\n      console.info(this.state.date.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const newName = this.props.clockName;\n    const oldName = prevProps.clockName;\n\n    if (newName !== oldName) {\n      console.debug(`Renamed from ${oldName} to ${newName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.date.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { Clock } from './Clock';\nimport './App.scss';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock clockName={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}